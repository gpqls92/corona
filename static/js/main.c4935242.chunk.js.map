{"version":3,"sources":["comp/Graph.js","comp/Main.js","comp/Grp.js","comp/Company.js","comp/Grh.js","comp/Grh1.js","comp/Service.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","d","useState","gData","setGdata","useEffect","className","data","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","valueFormat","format","enabled","colors","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","Main","subject","Corona","DATA","setData","tit","DESCRIPTION","push","onChange","e","filter","day","target","value","map","k","border","dataView","Company","Test","DAA","DSCRT","Grh","hData","setHdata","height","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","itemTextColor","symbolShape","Grh1","Service","Coo","TAA","width","scope","colSpan","rowspan","App","basename","src","alt","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4935242.chunk.js","sourcesContent":[" //comp > Graph.js\r\n import {useEffect, useState} from \"react\";\r\n import \"../App.css\";\r\n import { ResponsiveBar } from '@nivo/bar';\r\n \r\n export default function Graph({d}){\r\n     let [gData,setGdata] = useState(d);\r\n     //1차 접종자 - fir_inc, fir_inc1\r\n     //2차 접종자 - scd_inc, scd_inc1    \r\n     useEffect(()=>{\r\n         setGdata (\r\n            [\r\n                {\r\n                    \"country\": \"1차 접종자\",\r\n                    \"접종자 수\": d[0]['fir_inc1'],\r\n                    \"접종 누계\": d[0]['fir_inc']\r\n                },\r\n                {\r\n                    \"country\": \"2차 접종자\",\r\n                    \"접종자 수\": d[0]['scd_inc1'],\r\n                    \"접종 누계\": d[0]['scd_inc']\r\n                }\r\n            ]\r\n        );\r\n    },[d]);\r\n\r\n    \r\n    // {\r\n    //     \"country\": \"1차 접종자\",\r\n    //     \"burger\": 300,\r\n    //     \"burgerColor\": \"hsl(290, 70%, 50%)\",\r\n    //     \"kebab\": 98,\r\n    //     \"kebabColor\": \"hsl(130, 70%, 50%)\"\r\n    // }\r\n    return(\r\n        <div className=\"grap\">\r\n            <ResponsiveBar\r\n                data={gData}\r\n                keys={[ '접종자 수','접종 누계' ]}\r\n                indexBy=\"country\"\r\n                margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n                padding={0.3}\r\n                valueScale={{ type: 'linear' }}\r\n                indexScale={{ type: 'band', round: true }}\r\n                valueFormat={{ format: '', enabled: false }}\r\n                colors={{ scheme: 'nivo' }}\r\n                defs={[\r\n                    {\r\n                        id: 'dots',\r\n                        type: 'patternDots',\r\n                        background: 'inherit',\r\n                        color: '#38bcb2',\r\n                        size: 4,\r\n                        padding: 1,\r\n                        stagger: true\r\n                    },\r\n                    {\r\n                        id: 'lines',\r\n                        type: 'patternLines',\r\n                        background: 'inherit',\r\n                        color: '#eed312',\r\n                        rotation: -45,\r\n                        lineWidth: 6,\r\n                        spacing: 10\r\n                    }\r\n                ]}\r\n                fill={[\r\n                    {\r\n                        match: {\r\n                            id: 'fries'\r\n                        },\r\n                        id: 'dots'\r\n                    },\r\n                    {\r\n                        match: {\r\n                            id: 'sandwich'\r\n                        },\r\n                        id: 'lines'\r\n                    }\r\n                ]}\r\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                axisTop={null}\r\n                axisRight={null}\r\n                axisBottom={{\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: '접종자',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 32\r\n                }}\r\n                axisLeft={{\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: '',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -40\r\n                }}\r\n                labelSkipWidth={12}\r\n                labelSkipHeight={12}\r\n                labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                legends={[\r\n                    {\r\n                        dataFrom: 'keys',\r\n                        anchor: 'bottom-right',\r\n                        direction: 'column',\r\n                        justify: false,\r\n                        translateX: 120,\r\n                        translateY: 0,\r\n                        itemsSpacing: 2,\r\n                        itemWidth: 100,\r\n                        itemHeight: 20,\r\n                        itemDirection: 'left-to-right',\r\n                        itemOpacity: 0.85,\r\n                        symbolSize: 20,\r\n                        effects: [\r\n                            {\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemOpacity: 1\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","//Main.js\r\nimport {useState} from \"react\";\r\nimport Corona from \"../data/corona19.json\";\r\nimport Graph from \"./Graph.js\";\r\nimport \"../App.css\";\r\n\r\nexport default function Main(){\r\n    let subject = [];\r\n    let [data,setData] = useState(Corona.DATA);\r\n\r\n    for(let tit in Corona.DESCRIPTION){\r\n        subject.push(Corona.DESCRIPTION[tit]);\r\n    }\r\n    function dataChange(e){\r\n        // data 139개 데이터가 갖고있음\r\n        setData(\r\n            Corona.DATA.filter(day => (\r\n                day['s_vc_dt'] == e.target.value\r\n                // json날짜 == 셀렉터날짜\r\n            ))\r\n        );\r\n        // data 1개 테이터만 갖음\r\n    }\r\n\r\n    return(\r\n        <div className=\"contents1\"> \r\n            <section>\r\n                <h3>코로나 예방접종 현황</h3>\r\n                <div>\r\n                    <select id=\"day\" onChange={ dataChange}>\r\n                    {\r\n                        Corona.DATA.map(function(data,k){\r\n                            return (\r\n                                <option key={k}>\r\n                                    {data['s_vc_dt']}\r\n                                </option>\r\n                            )\r\n                        })\r\n                    }\r\n                    </select>\r\n                </div>\r\n                <table className=\"main1\" border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        {\r\n                        subject.map(function(tit,k){\r\n                            return <th key={k}> {tit} </th>;\r\n                        })            \r\n                    }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map(function(dataView,k){\r\n                            return (\r\n                                <tr key={k}>   \r\n                                    <td>{dataView['s_vc_dt']}</td>\r\n                                    <td>{dataView['fir_sub']}</td>\r\n                                    <td>{dataView['fir_inc1']}</td>\r\n                                    <td>{dataView['fir_inc']}</td>\r\n                                    <td>{dataView['fir_inc_rate']}</td>\r\n                                    <td>{dataView['scd_inc1']}</td>\r\n                                    <td>{dataView['scd_inc']}</td>\r\n                                    <td>{dataView['scd_inc_rate']}</td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }       \r\n                </tbody>\r\n                </table>\r\n            </section>\r\n            <Graph d={data}/>\r\n        </div>\r\n    );\r\n}","import \"../App.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\nexport default function Graph({d}){\r\n    let [gData,setGdata] = useState(d);\r\n    //1차 접종자 - fir_inc, fir_inc1\r\n    //2차 접종자 - scd_inc, scd_inc1    \r\n    useEffect(()=>{\r\n        setGdata (\r\n        [\r\n            {\r\n                \"country\": \"서울\",\r\n                \"신규 확진자 수\": d[0]['newCase'],\r\n                \"사망자 수\": d[0]['death'],\r\n                \"발생률\": d[0]['percentage'],\r\n                \"지역발생\": d[0]['newCcase'],\r\n                \"해외유입\": d[0]['newFcase'],\r\n            },\r\n            {\r\n                \"country\": \"경기\",\r\n                \"신규 확진자 수\": d[1]['newCase'],\r\n                \"사망자 수\": d[1]['death'],\r\n                \"발생률\": d[1]['percentage'],\r\n                \"지역발생\": d[1]['newCcase'],\r\n                \"해외유입\": d[1]['newFcase'],\r\n            },\r\n            {\r\n                \"country\": \"강원\",\r\n                \"신규 확진자 수\": d[2]['newCase'],\r\n                \"사망자 수\": d[2]['death'],\r\n                \"발생률\": d[2]['percentage'],\r\n                \"지역발생\": d[2]['newCcase'],\r\n                \"해외유입\": d[2]['newFcase'],\r\n            },\r\n            {\r\n                \"country\": \"충청\",\r\n                \"신규 확진자 수\": d[3]['newCase'],\r\n                \"사망자 수\": d[3]['death'],\r\n                \"발생률\": d[3]['percentage'],\r\n                \"지역발생\": d[3]['newCcase'],\r\n                \"해외유입\": d[3]['newFcase'],\r\n            },\r\n            {\r\n                \"country\": \"전라\",\r\n                \"신규 확진자 수\": d[4]['newCase'],\r\n                \"사망자 수\": d[4]['death'],\r\n                \"발생률\": d[4]['percentage'],\r\n                \"지역발생\": d[4]['newCcase'],\r\n                \"해외유입\": d[4]['newFcase'],\r\n            },\r\n            {\r\n                \"country\": \"경상\",\r\n                \"신규 확진자 수\": d[5]['newCase'],\r\n                \"사망자 수\": d[5]['death'],\r\n                \"발생률\": d[5]['percentage'],\r\n                \"지역발생\": d[5]['newCcase'],\r\n                \"해외유입\": d[5]['newFcase'],\r\n            },\r\n            {\r\n                \"country\": \"제주\",\r\n                \"신규 확진자 수\": d[6]['newCase'],\r\n                \"사망자 수\": d[6]['death'],\r\n                \"발생률\": d[6]['percentage'],\r\n                \"지역발생\": d[6]['newCcase'],\r\n                \"해외유입\": d[6]['newFcase'],\r\n            },\r\n        ]\r\n    );\r\n    },[d]);\r\n\r\n    return(\r\n    <div className=\"grap\">\r\n        <ResponsiveBar\r\n            data={gData}\r\n            keys={[  '지역명', '신규 확진자 수', '사망자 수', '발생률', '지역발생', '해외유입' ]}\r\n            indexBy=\"country\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            valueFormat={{ format: '', enabled: false }}\r\n            colors={{ scheme: 'nivo' }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'inherit',\r\n                    color: '#38bcb2',\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: '#eed312',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'fries'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'sandwich'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'country',\r\n                legendPosition: 'middle',\r\n                legendOffset: 32\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: '',\r\n                legendPosition: 'middle',\r\n                legendOffset: -40\r\n            }}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            legends={[\r\n                {\r\n                    dataFrom: 'keys',\r\n                    anchor: 'bottom-right',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 120,\r\n                    translateY: 0,\r\n                    itemsSpacing: 2,\r\n                    itemWidth: 100,\r\n                    itemHeight: 20,\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 0.85,\r\n                    symbolSize: 20,\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemOpacity: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n        />\r\n    </div>\r\n);\r\n}\r\n","import {useState} from \"react\";\r\nimport Test from \"../data/apicoro.json\";\r\nimport Grp from \"./Grp.js\";\r\n\r\nexport default function Company(){\r\n    let subject = [];\r\n    let [data,setData] = useState(Test.DAA);\r\n\r\n    for(let tit in Test.DSCRT){\r\n        subject.push(Test.DSCRT[tit]);\r\n    }\r\n    function dataChange(e){\r\n        setData(\r\n            Test.DAA.filter(day => (\r\n                day['countryName'] == e.target.value\r\n                // json 지역 == 셀렉터 지역\r\n            ))\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className=\"contents\"> \r\n        <section>\r\n            <h3>시도별 발생동향 응답 현황<span>(9.9.00시 기준)</span></h3>\r\n\r\n            <table border=\"1\">\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                    subject.map(function(tit,k){\r\n                        return <th key={k}> {tit} </th>;\r\n                    })            \r\n                }\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data.map(function(dataView,k){\r\n                        return (\r\n                            <tr key={k}>   \r\n                                <td>{dataView['countryName']}</td>\r\n                                <td>{dataView['newCase']}</td>\r\n                                <td>{dataView['death']}</td>\r\n                                <td>{dataView['percentage']}</td>\r\n                                <td>{dataView['newCcase']}</td>\r\n                                <td>{dataView['newFcase']}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }       \r\n            </tbody>\r\n            </table>\r\n        </section>\r\n        <Grp d={data}/>\r\n    </div>\r\n);\r\n}","import {useEffect, useState} from \"react\";\r\nimport \"../App.css\";\r\nimport { ResponsivePie } from '@nivo/pie';\r\n\r\nexport default function  Grh({}) {\r\n    let [hData, setHdata] =useState();\r\n    useEffect(()=>{\r\n        setHdata (\r\n            [\r\n                {\r\n                    \"id\": \"서울\",\r\n                    \"label\": \"서울\",\r\n                    \"value\": 31.58,\r\n                },\r\n                {\r\n                    \"id\": \"기타\",\r\n                    \"label\": \"기타\",\r\n                    \"value\": 29.89,\r\n                },\r\n                {\r\n                    \"id\": \"경기\",\r\n                    \"label\": \"경기\",\r\n                    \"value\": 28.49,\r\n                },\r\n                {\r\n                    \"id\": \"대구\",\r\n                    \"label\": \"대구\",\r\n                    \"value\": 5.26,\r\n                },\r\n                {\r\n                    \"id\": \"인천\",\r\n                    \"label\": \"인천\",\r\n                    \"value\": 4.78,\r\n                }\r\n            ]\r\n        );\r\n    },[]);\r\n    \r\n\r\n    return (\r\n        <div className=\"grh\" style={{ height:'280px'}}>\r\n            <h4>최근 2주간 감염경로별 확진자 비율</h4>\r\n        <ResponsivePie\r\n            data={hData}\r\n            margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n            innerRadius={0.5}\r\n            padAngle={0.7}\r\n            cornerRadius={3}\r\n            activeOuterRadiusOffset={8}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n            arcLinkLabelsSkipAngle={10}\r\n            arcLinkLabelsTextColor=\"#333333\"\r\n            arcLinkLabelsThickness={2}\r\n            arcLinkLabelsColor={{ from: 'color' }}\r\n            arcLabelsSkipAngle={10}\r\n            arcLabelsTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'inherit',\r\n                    color: 'rgba(255, 255, 255, 0.3)',\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: 'rgba(255, 255, 255, 0.3)',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'ruby'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'c'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'go'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'python'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'scala'\r\n                    },\r\n                    id: 'lines'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'lisp'\r\n                    },\r\n                    id: 'lines'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'elixir'\r\n                    },\r\n                    id: 'lines'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'javascript'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            legends={[\r\n                {\r\n                    anchor: 'bottom',\r\n                    direction: 'row',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from \"react\";\r\nimport \"../App.css\";\r\nimport { ResponsivePie } from '@nivo/pie';\r\n\r\nexport default function  Grh1({}) {\r\n    let [hData, setHdata] =useState();\r\n    useEffect(()=>{\r\n        setHdata (\r\n            [\r\n                {\r\n                    \"id\": \"선생확진자\",\r\n                    \"label\": \"선생확진자\",\r\n                    \"value\": 31.58\r\n                },\r\n                {\r\n                    \"id\": \"경로 조사중\",\r\n                    \"label\": \"경로 조사중\",\r\n                    \"value\": 36.7\r\n                },\r\n                {\r\n                    \"id\": \"지역집단발생\",\r\n                    \"label\": \"지역집단발생\",\r\n                    \"value\": 12.3\r\n                },\r\n                {\r\n                    \"id\": \"해외유입\",\r\n                    \"label\": \"해외유입\",\r\n                    \"value\": 2.1\r\n                },\r\n                {\r\n                    \"id\": \"병원 및 요양(병)원\",\r\n                    \"label\": \"병원 및 요양(병)원\",\r\n                    \"value\": 0.8\r\n                }\r\n            ]\r\n        );\r\n    },[]);\r\n    \r\n\r\n    return (\r\n        <div style={{ height:'280px' }}>\r\n        <h4>확진환자 지역별 비율</h4>\r\n        <ResponsivePie\r\n            data={hData}\r\n            margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n            innerRadius={0.5}\r\n            padAngle={0.7}\r\n            cornerRadius={3}\r\n            activeOuterRadiusOffset={8}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n            arcLinkLabelsSkipAngle={10}\r\n            arcLinkLabelsTextColor=\"#333333\"\r\n            arcLinkLabelsThickness={2}\r\n            arcLinkLabelsColor={{ from: 'color' }}\r\n            arcLabelsSkipAngle={10}\r\n            arcLabelsTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'inherit',\r\n                    color: 'rgba(255, 255, 255, 0.3)',\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: 'rgba(255, 255, 255, 0.3)',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'ruby'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'c'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'go'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'python'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'scala'\r\n                    },\r\n                    id: 'lines'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'lisp'\r\n                    },\r\n                    id: 'lines'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'elixir'\r\n                    },\r\n                    id: 'lines'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'javascript'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            legends={[\r\n                {\r\n                    anchor: 'bottom',\r\n                    direction: 'row',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#999',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 18,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#000'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import {useState} from \"react\";\r\nimport Coo from \"../data/beta.json\";\r\nimport Grh from \"./Grh.js\";\r\nimport Grh1 from \"./Grh1.js\";\r\nimport \"../App.css\";\r\n\r\nexport default function Service() {\r\n    let [data, setData] = useState(Coo.TAA);\r\n    \r\n    return(\r\n        <div className=\"contents2\"> \r\n            <section>\r\n                <h3>누적 검사현황</h3>\r\n                <div className=\"tee\">\r\n                    <table border=\"1\">\r\n                        <caption>\r\n                                누적 검사현황 - 검사완료\r\n                                (확진자수 (격리중, 격리해제, 사망, 소계), \r\n                                결과음성, 소계), 검사중, 합계로 구성\r\n                        </caption>\r\n                        <colgroup>\r\n                            <col style={{width:\"12.5%\"}} />\r\n                            <col style={{width:\"12.5%\"}} />\r\n                            <col style={{width:\"10%\"}} />\r\n                            <col style={{width:\"12.5%\"}} />\r\n                            <col style={{width:\"12.5%\"}} />\r\n                            <col style={{width:\"12.5%\"}} />\r\n                            <col style={{width:\"12.5%\"}} />\r\n                            <col style={{width:\"15%\"}} />\r\n                        </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"colgroup\" colSpan=\"6\"> 검사완료 </th>\r\n                                <th scope=\"col\" colSpan=\"1\" rowspan=\"3\"> 검사중 </th>\r\n                                <th scope=\"col\" colSpan=\"2\" rowspan=\"3\"> 합계 </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"colgroup\" colSpan=\"4\"> 확진환자수 </th>\r\n                                <th scope=\"col\" colSpan=\"1\" rowspan=\"2\"> 결과<br/> 음성 </th>\r\n                                <th scope=\"col\" colSpan=\"1\"rowspan=\"2\"> 소계 </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"col\"> 격리중 </th>\r\n                                <th scope=\"col\"> 격리해제 </th>\r\n                                <th scope=\"col\"> 사망 </th>\r\n                                <th scope=\"col\"> 소계 </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td> 26,207 </td>\r\n                                <td> 238,920 </td>\r\n                                <td> 2,343 </td>\r\n                                <td> 267,470 </td>\r\n                                <td> 12,403,479 </td>\r\n                                <td> 12,670,949 </td>\r\n                                <td> 897,924 </td>\r\n                                <td> 13,568,873 </td>                                \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n            </section>\r\n            <Grh d={data}/>\r\n            <Grh1 d={data}/>\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport Main from './comp/Main';\n        \nimport {BrowserRouter, Route, Switch, Link } from \n\"react-router-dom\";\nimport Company from './comp/Company';\nimport Service from './comp/Service';\n\nfunction App() {\n  return (\n    \n    <BrowserRouter basename=\"/corona\">\n    <div className=\"boo\">\n      {/* <div className=\"boo1\" to=\"/\">코로나바이러스감염증-19 현황</div> */}\n      <header>\n          <img className=\"loo\" src=\"img/img2.jpg\" alt=\"질병관리청로고\"/>\n          <h1 className=\"boo2\" to=\"/\">코로나바이러스감염증-19 현황</h1>\n          <div className=\"boo3\">과학적 근거에 기반한 안전한 접종으로, <br/>집단 면역을 확보하여\n            전 국민의 생명과<br/> 건강 보호는 물론, 일상 회복에 만전을 기하겠습니다.</div>\n          <Link to=\"/\">예방접종</Link>\n          <Link to=\"/company\">시도별 발생</Link>\n          <Link to=\"/service\">누적 검사</Link>\n          <div className=\"boo4\">\n            <p>신고상담</p>\n            보건소 |<br/>\n            질병관리청 콜센터 1339 |<br/>\n            지역번호 + 120 |<br/>\n            지역번호 + 114 |<br/>\n            <img className=\"img120\" src=\"./img/wa.png\" alt=\"과기고로고\"/>\n            <img className=\"img114\" src=\"./img/open.png\" alt=\"공공누리로고\"/><br/>\n            <span>Copyright ⓒ By MOHW. All Rights Reserved.</span>\n          </div>\n      </header>\n      <Switch>\n        <Route exact path=\"/\"> <Main /> </Route>\n        <Route path=\"/company\"> <Company /> </Route>\n        <Route path=\"/service\"> <Service /> </Route>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}